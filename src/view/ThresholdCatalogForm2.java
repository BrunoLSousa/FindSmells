/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.Color;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import metrics.MetricMethod;
import metrics.MetricPackage;
import metrics.MetricType;

/**
 *
 * @author bruno
 */
public class ThresholdCatalogForm2 extends javax.swing.JFrame {

    /**
     * Creates new form ThresholdCatalogForm2
     */
    public ThresholdCatalogForm2() {
        initComponents();
        createCatalog();
        this.setLocationRelativeTo(null);
    }

    private void createCatalog() {
        try {
            Properties properties = getProp();
            tableResults(properties);
        } catch (IOException ex) {
            Logger.getLogger(ThresholdCatalogForm2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private Properties getProp() throws IOException {
        Properties props = new Properties();
        InputStream is = getClass().getResourceAsStream("/properties/catalog.properties");
        props.load(is);
        return props;

    }

    private void tableResults(Properties prop) {
        DefaultTableModel model = getColumns();
        model = getData(model, prop);
        jTableCatalog = new JTable();
        jTableCatalog.setBackground(Color.white);
        jTableCatalog.setRowSelectionAllowed(false);
        jTableCatalog.setModel(model);
        jTableCatalog.setShowGrid(true);
        DefaultTableCellRenderer cellRender = new DefaultTableCellRenderer();
        cellRender.setHorizontalAlignment(SwingConstants.CENTER);
        jTableCatalog.getColumnModel().getColumn(0).setMaxWidth(70);
        jTableCatalog.getColumnModel().getColumn(0).setCellRenderer(cellRender);
        jTableCatalog.getColumnModel().getColumn(1).setMaxWidth(200);
        jTableCatalog.getColumnModel().getColumn(1).setCellRenderer(cellRender);
        jTableCatalog.getColumnModel().getColumn(2).setMaxWidth(400);
        jTableCatalog.getColumnModel().getColumn(2).setCellRenderer(cellRender);
        jTableCatalog.getColumnModel().getColumn(3).setMaxWidth(230);
        jTableCatalog.getColumnModel().getColumn(3).setCellRenderer(cellRender);
        ((DefaultTableCellRenderer) jTableCatalog.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(SwingConstants.CENTER);
	cellRender.setHorizontalAlignment(SwingConstants.CENTER);
        jTableCatalog.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTableCatalog);

    }

    private DefaultTableModel getData(DefaultTableModel model, Properties prop) {
        List<String> metrics = getMetrics();
        int i = 0;
        for (String metric : metrics) {
            String good = prop.getProperty("prop." + metric.toLowerCase() + ".good");
            String regular = prop.getProperty("prop." + metric.toLowerCase() + ".regular");
            String bad = prop.getProperty("prop." + metric.toLowerCase() + ".bad");
            if (good != null && regular != null && bad != null){
                model.addRow(new String[]{metric.toUpperCase(), good, regular, bad});
            }
        }
        return model;
    }

    private DefaultTableModel getColumns() {
        DefaultTableModel model = new DefaultTableModel() {
            public boolean isCellEditable(int rowIndex, int mColIndex) {
                return false;
            }
        };
        model.addColumn("Metric");
        model.addColumn("Good/Common");
        model.addColumn("Regular/Casual");
        model.addColumn("Bad/Uncommon");
        return model;
    }

    private List<String> getMetrics() {
        List<String> list = new ArrayList<>();
        for (MetricMethod m : MetricMethod.values()) {
            list.add(m.toString());
        }
        for (MetricType m : MetricType.values()) {
            list.add(m.toString());
        }
        for (MetricPackage m : MetricPackage.values()) {
            list.add(m.toString());
        }
        Collections.sort(list);
        return list;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelThreshold = new javax.swing.JPanel();
        jLabelTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaReference = new javax.swing.JTextArea();
        jPanelCatalog = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableCatalog = new javax.swing.JTable();

        setTitle("FindSmells");
        setResizable(false);

        jPanelThreshold.setBackground(new java.awt.Color(255, 255, 255));

        jLabelTitle.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabelTitle.setText("A Reference Catalog of Software Metric Threshold");

        jTextAreaReference.setEditable(false);
        jTextAreaReference.setColumns(20);
        jTextAreaReference.setRows(3);
        jTextAreaReference.setAutoscrolls(false);
        jTextAreaReference.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        jTextAreaReference.setSelectionColor(new java.awt.Color(255, 255, 255));
        String reference = "T. Fil√≥, M. Bigonha, and K. Ferreira, \"A Catalogue of Thresholds for Object-Oriented"
        + "Software Metrics,\" in Proceedings of the 1st Internation Conference on Advances and "
        + "Trends in Software Engineering (SOFTENG), 2015, pp. 48-55.";

        jTextAreaReference.setText(reference);
        jTextAreaReference.setLineWrap(true);
        jScrollPane1.setViewportView(jTextAreaReference);

        jPanelCatalog.setBackground(new java.awt.Color(255, 255, 255));

        jTableCatalog.setForeground(new java.awt.Color(255, 255, 255));
        jTableCatalog.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Metric", "Good/Common", "Regular/Casual", "Bad/Uncommon"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableCatalog.setToolTipText("");
        jTableCatalog.setSelectionBackground(new java.awt.Color(255, 255, 255));
        jScrollPane2.setViewportView(jTableCatalog);

        javax.swing.GroupLayout jPanelCatalogLayout = new javax.swing.GroupLayout(jPanelCatalog);
        jPanelCatalog.setLayout(jPanelCatalogLayout);
        jPanelCatalogLayout.setHorizontalGroup(
            jPanelCatalogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );
        jPanelCatalogLayout.setVerticalGroup(
            jPanelCatalogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanelThresholdLayout = new javax.swing.GroupLayout(jPanelThreshold);
        jPanelThreshold.setLayout(jPanelThresholdLayout);
        jPanelThresholdLayout.setHorizontalGroup(
            jPanelThresholdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelThresholdLayout.createSequentialGroup()
                .addGap(0, 24, Short.MAX_VALUE)
                .addComponent(jLabelTitle)
                .addGap(20, 20, 20))
            .addGroup(jPanelThresholdLayout.createSequentialGroup()
                .addGap(124, 124, 124)
                .addGroup(jPanelThresholdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelCatalog, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelThresholdLayout.setVerticalGroup(
            jPanelThresholdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelThresholdLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanelCatalog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelThreshold, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelThreshold, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
//
//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(ThresholdCatalogForm2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(ThresholdCatalogForm2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(ThresholdCatalogForm2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(ThresholdCatalogForm2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new ThresholdCatalogForm2().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JPanel jPanelCatalog;
    private javax.swing.JPanel jPanelThreshold;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableCatalog;
    private javax.swing.JTextArea jTextAreaReference;
    // End of variables declaration//GEN-END:variables
}
