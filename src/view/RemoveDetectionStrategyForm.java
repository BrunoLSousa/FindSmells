/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import metrics.Granulatiry;
import structure.DetectionStrategy;
import structure.dao.DetectionStrategyDAO;

/**
 *
 * @author bruno
 */
public class RemoveDetectionStrategyForm extends javax.swing.JFrame {

    /**
     * Creates new form RemoveForm
     *
     * @param mainScreen
     */
    public RemoveDetectionStrategyForm(FilterSystemForm mainScreen) {
        this.mainScreen = mainScreen;
        initComponents();
        updatePages();
        verifyStateButtons();
        updateHighlighter();
        this.setLocationRelativeTo(null);
    }

//    public RemoveDetectionStrategyForm(FilterSystemForm mainScreen) {
//        this.mainScreen = mainScreen;
//        initComponents();
//    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelMain = new javax.swing.JPanel();
        jPanelFilter = new javax.swing.JPanel();
        jLabelNameDetectionStrategy = new javax.swing.JLabel();
        jTextFieldNameDetectionStrategy = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxGranularity = new javax.swing.JComboBox();
        jButtonFilter = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableDetectionStrategies = new javax.swing.JTable();
        jButtonPrevious = new javax.swing.JButton();
        jButtonNext = new javax.swing.JButton();
        jLabelHighlighter = new javax.swing.JLabel();
        jButtonRemove = new javax.swing.JButton();
        jButtonSelect = new javax.swing.JButton();

        setTitle("FindSmells");

        jPanelMain.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jPanelFilter.setBorder(javax.swing.BorderFactory.createTitledBorder("Filter"));

        jLabelNameDetectionStrategy.setText("Name of Detection Strategy:");

        jLabel1.setText("Granularity:");

        jComboBoxGranularity.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButtonFilter.setText("Filter");
        jButtonFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFilterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelFilterLayout = new javax.swing.GroupLayout(jPanelFilter);
        jPanelFilter.setLayout(jPanelFilterLayout);
        jPanelFilterLayout.setHorizontalGroup(
            jPanelFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFilterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelFilterLayout.createSequentialGroup()
                        .addComponent(jLabelNameDetectionStrategy)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldNameDetectionStrategy))
                    .addGroup(jPanelFilterLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxGranularity, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFilterLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonFilter)
                .addGap(274, 274, 274))
        );
        jPanelFilterLayout.setVerticalGroup(
            jPanelFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFilterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNameDetectionStrategy)
                    .addComponent(jTextFieldNameDetectionStrategy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBoxGranularity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addComponent(jButtonFilter)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("DetectionStrategies"));

        jTableDetectionStrategies.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTableDetectionStrategies.setUpdateSelectionOnSort(false);
        jScrollPane1.setViewportView(jTableDetectionStrategies);
        selectGranularit();
        this.detectionStrategies = (List<DetectionStrategy>) new DetectionStrategyDAO().selectDetectionStrategiesByFilter(jTextFieldNameDetectionStrategy.getText(), jComboBoxGranularity.getSelectedItem().toString());
        tableResults();

        jButtonPrevious.setFont(new java.awt.Font("Dialog", 1, 8)); // NOI18N
        jButtonPrevious.setText("<<");
        jButtonPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPreviousActionPerformed(evt);
            }
        });

        jButtonNext.setFont(new java.awt.Font("Dialog", 1, 8)); // NOI18N
        jButtonNext.setText(">>");
        jButtonNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNextActionPerformed(evt);
            }
        });

        jLabelHighlighter.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelHighlighter.setText("jLabel1");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 640, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(217, 217, 217)
                .addComponent(jButtonPrevious)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelHighlighter, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonNext)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonPrevious)
                    .addComponent(jButtonNext)
                    .addComponent(jLabelHighlighter))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jButtonRemove.setText("Remove");
        jButtonRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoveActionPerformed(evt);
            }
        });

        jButtonSelect.setText("Select All");
        jButtonSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSelectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelMainLayout = new javax.swing.GroupLayout(jPanelMain);
        jPanelMain.setLayout(jPanelMainLayout);
        jPanelMainLayout.setHorizontalGroup(
            jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelFilter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelMainLayout.createSequentialGroup()
                        .addComponent(jButtonSelect)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonRemove)))
                .addContainerGap())
        );
        jPanelMainLayout.setVerticalGroup(
            jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelMainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonRemove)
                    .addComponent(jButtonSelect))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNextActionPerformed
        this.selectedAll = false;
        this.pageCurrent++;
        update();
        this.jButtonPrevious.setEnabled(true);
    }//GEN-LAST:event_jButtonNextActionPerformed

    private void verifyStateButtons() {
        if (this.pageCurrent == this.pages) {
            this.jButtonNext.setEnabled(false);
        } else {
            this.jButtonNext.setEnabled(true);
        }
        if (this.pageCurrent == 1) {
            this.jButtonPrevious.setEnabled(false);
        } else {
            this.jButtonPrevious.setEnabled(true);
        }
    }

    private void jButtonRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoveActionPerformed
        DetectionStrategyDAO dao = new DetectionStrategyDAO();
        for (int i = 0; i < jTableDetectionStrategies.getRowCount(); i++) {
            Boolean chked = Boolean.valueOf(jTableDetectionStrategies.getValueAt(i, 0).toString());
            if (chked) {
                int start = (LIMIT * (this.pageCurrent - 1));
                DetectionStrategy strategy = this.detectionStrategies.get(start + i);
                dao.remove(strategy.getId());
            }
        }
        JOptionPane.showMessageDialog(this, "Detection strategies successfully deleted!", "Confirmation", JOptionPane.INFORMATION_MESSAGE);
        this.detectionStrategies = new DetectionStrategyDAO().selectDetectionStrategiesByFilter(this.jTextFieldNameDetectionStrategy.getText(), (String) this.jComboBoxGranularity.getSelectedItem());
        this.mainScreen.refreshDetectionStrategies();
        this.selectedAll = false;
        this.pageCurrent = 1;
        updatePages();
        update();
    }//GEN-LAST:event_jButtonRemoveActionPerformed

    private void update() {
        changeNameButtonSelect();
        tableResults();
        verifyStateButtons();
        updateHighlighter();
    }

    private void jButtonSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSelectActionPerformed
        if (!this.selectedAll) {
            for (int i = 0; i < jTableDetectionStrategies.getRowCount(); i++) {
                jTableDetectionStrategies.setValueAt(true, i, 0);
            }
            this.selectedAll = true;
            changeNameButtonSelect();
        } else {
            for (int i = 0; i < jTableDetectionStrategies.getRowCount(); i++) {
                jTableDetectionStrategies.setValueAt(false, i, 0);
            }
            this.selectedAll = false;
            changeNameButtonSelect();
        }
    }//GEN-LAST:event_jButtonSelectActionPerformed

    private void jButtonPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPreviousActionPerformed
        this.selectedAll = false;
        this.pageCurrent--;
        update();
        this.jButtonNext.setEnabled(true);
    }//GEN-LAST:event_jButtonPreviousActionPerformed

    private void jButtonFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFilterActionPerformed
        this.detectionStrategies = new DetectionStrategyDAO().selectDetectionStrategiesByFilter(this.jTextFieldNameDetectionStrategy.getText(), (String) this.jComboBoxGranularity.getSelectedItem());
        this.selectedAll = false;
        this.pageCurrent = 1;
        updatePages();
        update();
    }//GEN-LAST:event_jButtonFilterActionPerformed

    private void tableResults() {
        if (!this.detectionStrategies.isEmpty()) {
            DefaultTableModel model = getColumns();
            model = getData(model);
            jTableDetectionStrategies = new JTable();
            jTableDetectionStrategies.setModel(model);
            jTableDetectionStrategies.setShowGrid(true);
            DefaultTableCellRenderer cellRender = new DefaultTableCellRenderer();
            cellRender.setHorizontalAlignment(SwingConstants.CENTER);
            jTableDetectionStrategies.getColumnModel().getColumn(0).setMaxWidth(100);
            ((DefaultTableCellRenderer) jTableDetectionStrategies.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(SwingConstants.CENTER);
            jTableDetectionStrategies.getTableHeader().setReorderingAllowed(false);
            jScrollPane1.setViewportView(jTableDetectionStrategies);
        } else {
            JLabel emptyLabel = new JLabel("There aren't detection strategies for this filter!!!");
            emptyLabel.setHorizontalAlignment(SwingConstants.CENTER);
            jScrollPane1.setViewportView(emptyLabel);
        }
    }

    private void changeNameButtonSelect() {
        if (this.selectedAll) {
            this.jButtonSelect.setText("Deselect All");
        } else {
            this.jButtonSelect.setText("Select All");
        }
    }

    private DefaultTableModel getData(DefaultTableModel model) {
        int start = (LIMIT * pageCurrent) - LIMIT;
        int i = 0;
        while (((i + start) < this.detectionStrategies.size()) && (i < LIMIT)) {
            model.addRow(new Object[0]);
            model.setValueAt(selectedAll, i, 0);
            model.setValueAt(this.detectionStrategies.get(i + start).getName(), i, 1);
            model.setValueAt(this.detectionStrategies.get(i + start).getGranularity().toString(), i, 2);
            i++;
        }
        return model;
    }

    private DefaultTableModel getColumns() {
        DefaultTableModel model = new DefaultTableModel() {
            public Class<?> getColumnClass(int column) {
                switch (column) {
                    case 0:
                        return Boolean.class;
                    case 1:
                        return String.class;
                    case 2:
                        return String.class;
                    default:
                        return String.class;
                }
            }
        };
        model.addColumn("Select");
        model.addColumn("Name of Detection Strategy");
        model.addColumn("Granularity");
        return model;
    }

    private void updateHighlighter() {
        this.jLabelHighlighter.setText(this.pageCurrent + " of " + this.pages);
    }

    private void updatePages() {
        if (!detectionStrategies.isEmpty()) {
            if ((this.detectionStrategies.size() % LIMIT) == 0) {
                pages = (this.detectionStrategies.size() / LIMIT);
            } else {
                pages = (this.detectionStrategies.size() / LIMIT) + 1;
            }
        } else {
            pages = 1;
        }
    }

    private void selectGranularit() {
        DefaultComboBoxModel combo = new DefaultComboBoxModel();
        combo.addElement("None");
        for (Granulatiry g : Granulatiry.values()) {
            combo.addElement(g.toString());
        }
        jComboBoxGranularity.setModel(combo);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonFilter;
    private javax.swing.JButton jButtonNext;
    private javax.swing.JButton jButtonPrevious;
    private javax.swing.JButton jButtonRemove;
    private javax.swing.JButton jButtonSelect;
    private javax.swing.JComboBox jComboBoxGranularity;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelHighlighter;
    private javax.swing.JLabel jLabelNameDetectionStrategy;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelFilter;
    private javax.swing.JPanel jPanelMain;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableDetectionStrategies;
    private javax.swing.JTextField jTextFieldNameDetectionStrategy;
    // End of variables declaration//GEN-END:variables
    private List<DetectionStrategy> detectionStrategies;
    private FilterSystemForm mainScreen;
    private boolean selectedAll = false;
    private static final int LIMIT = 20;
    private int pageCurrent = 1;
    private int pages;
}
